/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
    buttonCallback(this, &screenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    Background.setXY(0, 0);
    Background.setBitmap(touchgfx::Bitmap(BITMAP_BACKSMALL_ID));
    add(Background);

    RedBtn.setXY(28, 20);
    RedBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    RedBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XH0G));
    RedBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    RedBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(76, 2, 2));
    RedBtn.setAction(buttonCallback);
    add(RedBtn);

    GreenBtn.setXY(28, 95);
    GreenBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    GreenBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_CU6G));
    GreenBtn.setLabelColor(touchgfx::Color::getColorFromRGB(0, 255, 128));
    GreenBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 84, 32));
    add(GreenBtn);

    BlueBtn.setXY(28, 172);
    BlueBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    BlueBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_I7PT));
    BlueBtn.setLabelColor(touchgfx::Color::getColorFromRGB(0, 52, 194));
    BlueBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(2, 0, 61));
    add(BlueBtn);

    DarkLED.setXY(185, 70);
    DarkLED.setBitmap(touchgfx::Bitmap(BITMAP_LEDOFFSR_ID));
    add(DarkLED);

    BrightLED.setXY(185, 64);
    BrightLED.setBitmap(touchgfx::Bitmap(BITMAP_LEDONSR_ID));
    BrightLED.setVisible(false);
    add(BrightLED);

    Name.setXY(182, 0);
    Name.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Name.setLinespacing(0);
    Name.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TWNZ));
    add(Name);
}

screenViewBase::~screenViewBase()
{

}

void screenViewBase::setupScreen()
{

}

void screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &RedBtn)
    {
        //redbutton
        //When RedBtn clicked call virtual function
        //Call RedButtonPressed
        RedButtonPressed();
    }
}

void screenViewBase::handleKeyEvent(uint8_t key)
{
    if(108 == key)
    {
        //Hide_LED
        //When hardware button 108 clicked hide DarkLED
        //Hide DarkLED
        DarkLED.setVisible(false);
        DarkLED.invalidate();
    
        //ShowLED
        //When Hide_LED completed show BrightLED
        //Show BrightLED
        BrightLED.setVisible(true);
        BrightLED.invalidate();
    
    
    }
}
